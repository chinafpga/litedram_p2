//
// This is a file generated by Phase-Locked Loop wizard.
// Please do not edit this file!
// Generated time: 12/21/2023 18:41:37
// Version: Fuxi fuxi win64
// Wizard name: Phase-Locked Loop 1.0b
//
// ============================================================
// File Name: pll_v1.v
// IP core : pll
// Device name: P2P50N0V324-M0X1C7
// ============================================================

module pll_v1(
    pll_rst,
    clkin0,
    locked,
    clkout0,
    clkout1,
    clkout2,
    clkout3,
    clkout4,
    clkout5,
    clkout6
);

input pll_rst;
input clkin0;
output locked;
output clkout0;
output clkout1;
output clkout2;
output clkout3;
output clkout4;
output clkout5;
output clkout6;

wire gen_pdb;
wire gen_rst;
pll_detector u_det (
        .refclk (clkin0),
        .rst (pll_rst),
        .pdb (1'b1),
        .pll_clk (clkout0),
        .pll_pd (gen_pdb),
        .pll_rst (gen_rst)
);

PLL_TOP #(
        .SEL_FBPATH (1'b0),
        .pll_sel ("auto"),
        .input_freq ("100"),
        .CPSEL_FN (6'b101000),
        .CP_AUTO_ENB (1'b0),
        .BK (4'b0010),
        .CALIB_VREF (2'b01),
        .CKSEL (1'b0),
        .CPSEL_CR (4'b1101),
        .LPF (3'b111),
        .FBDLY (7'b0000000),
        .PFBSEL (3'b000),
        .VCO_INI_SEL (1'b0),
        .RST_REG_ENB (1'b0),
        .TRIM_CAP (3'b010),
        .EN_LOWSPD (1'b0),
        .VRSEL (2'b01),
        .CASCADE_EN (1'b0),
        .FRAC_C0 (3'b000),
        .FRAC_FB (3'b000),
        .MKEN0 (1'b1),
        .BPS0 (1'b0),
        .DIVC0 (7'b0100111),
        .GATE_BPS0 (1'b0),
        .P0SEL (3'b000),
        .CO0DLY (7'b0001010),
        .ADD_HALF0 (1'b0),
        .CO0DUTY (7'b0010100),
        .MKEN1 (1'b1),
        .BPS1 (1'b0),
        .DIVC1 (7'b0100111),
        .GATE_BPS1 (1'b0),
        .P1SEL (3'b000),
        .CO1DLY (7'b0000000),
        .ADD_HALF1 (1'b0),
        .CO1DUTY (7'b0010100),
        .MKEN2 (1'b1),
        .BPS2 (1'b0),
        .DIVC2 (7'b0001001),
        .GATE_BPS2 (1'b0),
        .P2SEL (3'b000),
        .CO2DLY (7'b0000000),
        .ADD_HALF2 (1'b0),
        .CO2DUTY (7'b0000101),
        .MKEN3 (1'b1),
        .BPS3 (1'b0),
        .DIVC3 (7'b0001001),
        .GATE_BPS3 (1'b0),
        .P3SEL (3'b100),
        .CO3DLY (7'b0000010),
        .ADD_HALF3 (1'b0),
        .CO3DUTY (7'b0000101),
        .MKEN4 (1'b1),
        .BPS4 (1'b0),
        .DIVC4 (7'b0010011),
        .GATE_BPS4 (1'b0),
        .P4SEL (3'b000),
        .CO4DLY (7'b0000000),
        .ADD_HALF4 (1'b0),
        .CO4DUTY (7'b0001010),
        .MKEN5 (1'b1),
        .BPS5 (1'b0),
        .DIVC5 (7'b0001001),
        .GATE_BPS5 (1'b0),
        .P5SEL (3'b100),
        .CO5DLY (7'b0000111),
        .ADD_HALF5 (1'b0),
        .CO5DUTY (7'b0000101),
        .MKEN6 (1'b1),
        .BPS6 (1'b0),
        .DIVC6 (7'b0100111),
        .GATE_BPS6 (1'b0),
        .P6SEL (3'b000),
        .CO6DLY (7'b0000000),
        .ADD_HALF6 (1'b0),
        .CO6DUTY (7'b0010100),
        .DIVN (7'b0000000),
        .DIVM (7'b0001111),
        .EN_HOLD (1'b1),
        .LD_HOLD (1'b0),
        .LD_CLKDIV (1'b0),
        .LD_EN_ACC (1'b0),
        .LD_RT_INRNG (1'b1),
        .LD_RT_OUTRNG (1'b1),
        .LD_MUX (1'b0),
        .CNT_SEL (2'b01),
        .FORCE_LOCK (1'b0),
        .INRNG_SEL (3'b010),
        .OUTRNG_SEL (3'b010),
        .LD_EN (1'b1),
        .GATE_ENB (1'b1),
        .CALIB_DIR (1'b0),
        .CALIB_EN (1'b1),
        .CALIB_MANUAL (4'b1000),
        .CALIB_CYCLE (3'b011),
        .CALIB_EN_DYN (1'b0),
        .CALIB_CLKDIV (1'b0),
        .CALIB_STB_TIME (3'b011),
        .CALIB_THRESHOLD (3'b011),
        .RST_SEL (2'b11),
        .PDB_SEL (2'b11),
        .FP_CFG_EN (1'b0),
        .SSC_ACCSEL (2'b00),
        .SSC_EN (1'b0),
        .SSC_MODE (1'b0),
        .SSC_TRI_PEAK (2'b00),
        .DIVACC (2'b00),
        .DIVSSC (7'b0000000)
)
pll_u0 (
        .PLLCK0 (clkin0),
        .PLLCK1 (),
        .PSCK (),
        .PSDIR (),
        .PSEN (),
        .PSDONE (),
        .PSSEL (),
        .CALIB_DYN_DIR (),
        .CALIB_DYN_UPDATE (),
        .FP_DUTY_FORCE (),
        .FP_ADD_HALF (),
        .FP_DIV (),
        .FP_DUTY (),
        .FP_SEL (),
        .FP_SW (),
        .FP_CF_CLK (),
        .FP_CF_EN (),
        .FP_CF_IN (),
        .FP_CF_UP (),
        .FP_CF_SEL (),
        .FBIN (),
        .PDB (gen_pdb),
        .RSTPLL (gen_rst),
        .CO0 (clkout0),
        .CO1 (clkout1),
        .CO2 (clkout2),
        .CO3 (clkout3),
        .CO4 (clkout4),
        .CO5 (clkout5),
        .CO6 (clkout6),
        .PLOCK (locked)
);

endmodule

module pll_detector(
    refclk,
    pdb,
    rst,
    pll_clk,
    pll_pd,
    pll_rst
);

input refclk, pdb, rst;
input pll_clk;
output pll_pd;
output pll_rst;

reg [3:0] genrst = 0;
wire genrsten = genrst != 4'b1010;

wire rsts;
assign rsts = pdb & (!genrsten);
assign pll_rst = rst | genrsten;

always @ (posedge refclk) begin
    if(genrsten)
        genrst <= genrst + 1;
end

reg [5:0] pll_state = 0;
reg [21:0] state = 0;

wire pllwork = (pll_state == 6'b100110);
always @ (posedge refclk or negedge rsts) begin
    if(!rsts)
        state <= 'h0;
    else if(~pllwork)
        state <= state + 1;
    else
        state <= state;
end

always @ (posedge pll_clk or negedge rsts) begin
    if(!rsts)
        pll_state <= 0;
    else if(~pllwork)
        pll_state <= pll_state + 1;
    else
        pll_state <= pll_state;
end

wire pdb_gen = state[21:16] != 6'b100110;
assign pll_pd = pdb_gen & pdb;

endmodule


// ============================================================
//                  pll Setting
//
// Warning: This part is read by Fuxi, please don't modify it.
// ============================================================
// Device          : P2P50N0V324-M0X1C7
// Module          : pll_v1
// IP core         : pll
// IP Version      : 1

// BandWidth       : Medium
// Bypass0         : false
// Bypass1         : false
// Bypass2         : false
// Bypass3         : false
// Bypass4         : false
// Bypass5         : false
// Bypass6         : false
// C0              : 39
// C1              : 39
// C2              : 9
// C3              : 9
// C4              : 19
// C5              : 9
// C6              : 39
// CascadeOutputClock: false
// Clkin0Enable    : true
// Clkin1Enable    : false
// Clkout0UseFrac  : false
// ClkoutNum       : 7
// Delay0          : 10
// Delay1          : 0
// Delay2          : 0
// Delay3          : 2
// Delay4          : 0
// Delay5          : 7
// Delay6          : 0
// DelayUnit       : degree
// DeskewMode      : None
// DutyCycle0      : 0.5
// DutyCycle1      : 0.5
// DutyCycle2      : 0.5
// DutyCycle3      : 0.5
// DutyCycle4      : 0.5
// DutyCycle5      : 0.5
// DutyCycle6      : 0.5
// DynOutputClockSwitch: false
// DynPhaseShiftEn : false
// Enable0         : true
// Enable1         : true
// Enable2         : true
// Enable3         : true
// Enable4         : true
// Enable5         : true
// Enable6         : true
// ExpectFreq0     : 40
// ExpectFreq1     : 40
// ExpectFreq2     : 160
// ExpectFreq3     : 160
// ExpectFreq4     : 80
// ExpectFreq5     : 160
// ExpectFreq6     : 40
// ForceLocked     : false
// FracDivCO0En    : false
// FracDivForFeadBackEn: false
// Gate0           : false
// Gate1           : false
// Gate2           : false
// Gate3           : false
// Gate4           : false
// Gate5           : false
// Gate6           : false
// GclkCcbEnable   : false
// InputFreq       : 100
// Location        : auto
// M               : 15
// N               : 0
// Phase0          : 0
// Phase1          : 0
// Phase2          : 0
// Phase3          : 4
// Phase4          : 0
// Phase5          : 4
// Phase6          : 0
// PortLocked      : true
// PowerMode       : always_on
// ResetMode       : pllrst
// Simulation Files: 
// SpreadEnable    : false
// SpreadFreq      : 30
// SpreadMode      : Down
// SpreadRange     : 0
// SpreadTriPeak   : 32
// Synthesis Files : 
// UseLockGate     : false
// VcoCalibration  : false
// VcoDivide       : 0
